#-*-coding:utf8;-*-
#qpy:3
#qpy:console

import config
import telebot 
import searchClass
from telebot import types
import time

#0 - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
#1 - –∞–≤—Ç–æ—Ä
#2 - –Ω–∞–∑–≤–∞–Ω–∏–µ
#3 - —Ç—ç–≥
#4 - –≥–æ–¥
#5 - AddDB


#diSendBook –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ –µ—â–µ –Ω–∞–¥–æ –≤—ã—Å–ª–∞—Ç—å. –ü–æ —Ñ–∞–∫—Ç—É —ç—Ç–æ –±—É–¥–µ—Ç, –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ key-value, –∞ value –±—É–¥–µ—Ç –º–∞—Å—Å–∏–≤ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –º–∞—Å—Å–∏–≤–æ–≤.... –±–ª—è...
diSendBook = {}
#di –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ–Ω—é
di = {}
#diDosProtect –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π (–∑–∞—â–∏—Ç–∞ –æ—Ç –¥–æ—Å)
diDosProtect = {}

onButtonClick = 0

bot = telebot.TeleBot(config._TOKEN, skip_pending=True)



@bot.message_handler(commands=['start'])
def start(message):
	
	if diDosProtect.get(message.chat.id) == None:
		diDosProtect[message.chat.id] = True
	if diDosProtect[message.chat.id] == True:
		diDosProtect[message.chat.id] = False
		bot.send_message(message.chat.id, "–¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–∏—Å–∫–æ–≤—ã–π –±–æ—Ç '–ë–∑–¥—ã–Ω—å-–±–∏–±–ª–∏–æ—Ç–µ–∫–∏', —ç—Ç–æ –ø–µ—Ä–≤—ã–π –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–Ω–∏–≥–∞—Ö –∏–∑ –º–∏—Ä–∞ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ! –ê –≤–æ—Ç —Ç—É—Ç –Ω–∞—à –∫–∞–Ω–∞–ª @bzd_channel –∏ —á–∞—Ç @book_it :-)")
		di[message.chat.id] = 0
		if sendMainMenu(message.chat.id):
			diDosProtect[message.chat.id] = True
			return
	else:
		return
	
####Markup-—ã –º–µ–Ω—é—à–µ–∫, –¥–∞–±—ã –Ω–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞–∂–¥—ã–π —Ä–∞–∑
#–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
markupMainMenu = types.ReplyKeyboardMarkup()
markupMainMenu.resize_keyboard = True
itemAuthorMainMenu = types.KeyboardButton("–ê–≤—Ç–æ—Ä")
itemNameMainMenu = types.KeyboardButton("–ù–∞–∑–≤–∞–Ω–∏–µ")
itemTagsMainMenu = types.KeyboardButton("–¢—ç–≥")
itemAgeMainMenu = types.KeyboardButton("–ì–æ–¥")
markupMainMenu.row(itemAuthorMainMenu, itemNameMainMenu)
markupMainMenu.row(itemTagsMainMenu, itemAgeMainMenu)
#–ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
markupReplyMenu = types.ReplyKeyboardMarkup()
markupReplyMenu.resize_keyboard = True
itemReplyMenu = types.KeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†")
markupReplyMenu.row(itemReplyMenu)

##########
	

@bot.message_handler(content_types=['text'])
def MainFunction(message):
	
	
	#Admin commands
	global onButtonClick
	messageText = message.text
	messageChatId = message.chat.id
	
	if diDosProtect.get(messageChatId) != None:
		if diDosProtect[messageChatId] == False:
			return
		
	
	if messageChatId == config._FATHERid:
		#–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Dictionary
		if messageText == "Dict":
			bot.send_message(config._FATHERid,str(di))
			return
		#–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–ª–∏–∫–æ–≤
		if messageText == "Click":
			bot.send_message(config._FATHERid, str(onButtonClick))
			return
		#–†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
		if messageText == "AddDB":
			di[config._FATHERid] = 5
			bot.send_message(config._FATHERid, "ok, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å")
			return
		#–°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É book (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 1 —Ä–∞–∑, –ø—Ä–∏ —Å–∞–º–æ–º –ø–µ—Ä–≤–æ–º —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞)
		if messageText == "CreateTable":
			ret = searchClass.createTable()
			bot.send_message(config._FATHERid, ret)
		#–†–µ–∂–∏–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
		if messageText == "ReturnInform": 
			di[config._FATHERid] = 6
			bot.send_message(config._FATHERid, "ok, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
		#–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
		if messageText == "SelectAll":
			ret_text = telebot.util.split_string(str(searchClass.selectAll()), 4000)
			for i in ret_text:
				bot.send_message(config._FATHERid, str(i))
		#–ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–æ–∫
		if messageText == "CountRows":
			bot.send_message(config._FATHERid, str(searchClass.countRows()))
		#–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞
		if messageText == "StopBotNow":
			bot.send_message(config._FATHERid, "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
			print ("Bot stoped")
			exit()
				
				
	# User and menu
	try:
		#–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é, –∏—â–µ–º –∫–æ–º–∞–Ω–¥—É –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø–æ–∏—Å–∫—É
		if di[messageChatId] == 0 or di[messageChatId] > 4:
			changeMenu(messageText,messageChatId)
			return
		#–ï—Å–ª–∏ –º—ã –≤ –ø–æ–¥–º–µ–Ω—é –∏ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é - –ø–µ—Ä–µ—Ö–æ–¥–∏–º
		if di[messageChatId] != 0:
			if messageText == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†":
				di[messageChatId] = 0
				sendMainMenu(messageChatId)
				onButtonClick += 1
				return
				
			if diDosProtect.get(messageChatId) == None:
				diDosProtect[messageChatId] = True
				
			if diDosProtect[messageChatId] == True:
				diDosProtect[messageChatId] = False
				if len(messageText) <= 30:
					if di[messageChatId] == 1: #–∞–≤—Ç–æ—Ä
						if firstSend(searchClass.search(message, "author"), messageChatId):
							diDosProtect[messageChatId] = True
							return
					if di[messageChatId] == 2: #–ù–∞–∑–≤–∞–Ω–∏–µ
						if firstSend(searchClass.search(message, "name"), messageChatId):
							diDosProtect[messageChatId] = True
							return
					if di[messageChatId] == 3: #–¢—ç–≥
						if firstSend(searchClass.search(message, "tag"), messageChatId):
							diDosProtect[messageChatId] = True
							return
					if di[messageChatId] == 4: #–ì–æ–¥
						if firstSend(searchClass.search(message, "age"), messageChatId):
							diDosProtect[messageChatId] = True
							return
				else:
					bot.send_message(messageChatId, "–í —Ç–≤–æ—ë–º –∑–∞–ø—Ä–æ—Å–µ –±–æ–ª—å—à–µ 30 —Å–∏–º–≤–æ–ª–æ–≤")
					diDosProtect[messageChatId] = True
					return
		
			
	except KeyError:
		changeMenu(messageText, messageChatId)
		if di.get(messageChatId) == None:
			di[messageChatId] = 0 
			sendMainMenu(messageChatId)
	

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	if diDosProtect.get(call.message.chat.id) == None:
		diDosProtect[call.message.chat.id] = True
	if diDosProtect[call.message.chat.id] == True:
		diDosProtect[call.message.chat.id] = False
		if call.message:
			if call.data == "again":
				bot.delete_message(call.message.chat.id, call.message.message_id)
				if collectAgain(call.message.chat.id):
					diDosProtect[call.message.chat.id] = True
			return
	
@bot.message_handler(content_types=['document'])
def documMessage(message):
	if message.chat.id == config._FATHERid:
		try:
			#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
			if di[config._FATHERid] == 5:
				messReturn = searchClass.addDB(message)
				bot.send_message(config._FATHERid, messReturn)
				
			#–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
			if di[config._FATHERid] == 6:
				bot.send_message(config._FATHERid, str(message))
				
		except KeyError:
			bot.send_message(config._FATHERid, "KeyError, –≤–∞—Å –Ω–µ –±—ã–ª–æ –≤ –±–∞–∑–µ")
			return
		

def sendReplyMenu(messageChatId, NameMenu):
	bot.send_message(messageChatId, "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ({name}) ".format(name=NameMenu), reply_markup=markupReplyMenu)
	return

def sendMainMenu(messageChatId):
	bot.send_message(messageChatId, "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", reply_markup=markupMainMenu)
	return True

#–ü–µ—Ä–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–∏–≥–∞–º–∏, —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç –∫–Ω–∏–≥–∏ –≤ diSendBook –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç—Ä–∏
def firstSend(message, chatId):
	if message[0] == "error":
		bot.send_message(chatId, message[1])
		return True
	if len(message) <= 3:
		sendBook(message, chatId, False, 0)
		return True
	else:
		diSendBook[chatId] = message
		print (str(diSendBook[chatId]))
		i = 0
		retList=[]
		while i<3:
			retList.append(diSendBook[chatId].pop())
			i += 1
		sendBook(retList,chatId,True,len(diSendBook[chatId]))
		return True
		
#–í—Å–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–∏–≥ –∏–∑ —Ç–æ–≥–æ –∂–µ –∫–æ–º–ø–ª–µ–∫—Ç–∞, —Ä–µ–∂–µ—Ç –ø–æ —Ç—Ä–∏ –∫–Ω–∏–≥–∏ –∏ –¥–∞–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ—É–Ω–∫—Ü–∏–∏ sendBook
def collectAgain(chatId):
	if diSendBook.get(chatId) == None:
		#bot.send_message(chatId, "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—á–µ–≥–æ")
		return True
	if len(diSendBook[chatId]) <= 3:
		sendBook(diSendBook[chatId], chatId, False, 0)
		diSendBook[chatId].clear()
		return True
	i = 0
	retList = []
	while i<3:
		retList.append(diSendBook[chatId].pop())
		i += 1
	sendBook(retList,chatId,True,len(diSendBook[chatId]))
	return True
		
	
#–ó–∞–Ω–∏–º–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∫–Ω–∏–≥
def sendBook(message,chatId,sendButton,residue):
	p = 0
	for i in message:
		p += 1
		markup = types.InlineKeyboardMarkup()
		item = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–Ω–∏–≥–µ", url=i[5].strip())
		itemAgain = types.InlineKeyboardButton(text="–î–∞–ª–µ–µ, –æ—Å—Ç–∞–ª–æ—Å—å –∫–Ω–∏–≥: " + str(residue), callback_data="again")
		markup.row(item)
		bot.send_message(chatId, "ID: {id}\n–¢—ç–≥–∏: {tag}\n–Ø–∑—ã–∫: {language}\n–ê–≤—Ç–æ—Ä: {author}\n–ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n–ì–æ–¥: {age}\n–°—Å—ã–ª–∫–∞: {link}\n".format(id=i[0],tag=i[3],author=i[1],name=i[2],age=i[4],link=i[5],language=i[6]), reply_markup=markup)
		if sendButton == True:
			if p == len( message):
				keyboard = types.InlineKeyboardMarkup()
				item = types.InlineKeyboardButton(text = "–î–∞–ª–µ–µ", callback_data="again")
				keyboard.add(item)
				bot.send_message(chatId, "–û—Å—Ç–∞–ª–æ—Å—å –∫–Ω–∏–≥: " + str(residue), reply_markup= keyboard)
	return
	
#–í—ã–±–æ—Ä –ú–µ–Ω—é
def  changeMenu(messageText, messageChatId):
		global onButtonClick
		if di.get(messageChatId) != None:
			if di[messageChatId] != 0:
				if messageText == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†":
					di[messageChatId] = 0
					sendMainMenu(messageChatId)
					onButtonClick += 1
					return 
		if messageText == "–ê–≤—Ç–æ—Ä":
				di[messageChatId] = 1
				sendReplyMenu(messageChatId,"–ê–≤—Ç–æ—Ä")
				onButtonClick += 1
				return 
		if messageText == "–ù–∞–∑–≤–∞–Ω–∏–µ":
				di[messageChatId] = 2
				sendReplyMenu(messageChatId,"–ù–∞–∑–≤–∞–Ω–∏–µ")
				onButtonClick += 1
				return 
		if messageText == "–¢—ç–≥":
				di[messageChatId] = 3
				sendReplyMenu(messageChatId,"–¢—ç–≥")
				onButtonClick += 1
				return 
		if messageText == "–ì–æ–¥":
				di[messageChatId] = 4
				sendReplyMenu(messageChatId,"–ì–æ–¥")
				onButtonClick += 1
				return
		return
			
	
while True:
	try:
		bot.polling(none_stop=True)
	except Exception as e:
		print ("\n–Ø –£–ü–ê–õ! –û—à–∏–±–∫–∞: ")
		print (str(e))
		print ("-----------------")
		time.sleep(5)
		continue
    
    
    
    
    
    
    
